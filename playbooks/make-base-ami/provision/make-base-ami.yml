- name: Create a sandbox EC2 instance
  hosts: localhost
  connection: local
  gather_facts: false
  tasks:
    - name: Launch instance
      ec2:
        profile: "{{ aws_profile }}"
        region: "{{ aws_region }}"
        image: "{{ ubuntu_ami }}"
        vpc_subnet_id: "{{ vpc_subnet_id }}"
        instance_type: t2.micro
        key_name: cadasta-utility
        group: cadasta-utility
        instance_tags: '{ "Name": "base-ami-builder" }'
        assign_public_ip: yes
        wait: yes
      register: ec2
    - name: Add new instance to host group
      add_host: hostname="{{ item.public_ip }}" groupname=launched
      with_items: ec2.instances
    - name: Wait for SSH to come up
      wait_for: host="{{ item.public_dns_name }}" port=22
                delay=60 timeout=320 state=started
      with_items: ec2.instances

- name: Provision EC2 instance
  hosts: launched
  remote_user: ubuntu
  gather_facts: true
  roles:
    - ckan
    - solr
    - angular
    - api
    - ona
    - prereqs

- name: Generate machine image
  hosts: localhost
  connection: local
  gather_facts: false
  tasks:
    - name: Generate machine image from running instance
      ec2_ami:
        profile: "{{ aws_profile }}"
        region: "{{ aws_region }}"
        instance_id: "{{ item }}"
        wait: yes
        name: "{{ base_ami_name }}"
      with_items: ec2.instance_ids
      register: ami

- name: Terminate instance
  hosts: localhost
  connection: local
  gather_facts: false
  tasks:
    - name: Terminate previously launched instance
      ec2:
        region: "{{ aws_region }}"
        state: absent
        instance_ids: "{{ ec2.instance_ids }}"

- name: Save AMI ID
  hosts: localhost
  connection: local
  gather_facts: false
  tasks:
    - name: Dump AMI ID to file
      command: echo "{{ ami }}"
